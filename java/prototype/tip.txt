原型模式：
用原型实例指定创建对象的种类，并通过  拷贝这些原型创建新的对象。

原型模式的功能：
通过克隆来创建新的对象实例
为克隆出来的新的对象实例复制原型实例属性的值。

深度克隆和浅度克隆：
浅度克隆：只负责克隆按值传递的数据（比如基本数据类型、String类型）
深度克隆：除了浅度克隆的值外，还负责克隆引用类型的数据。如果被克隆的对象里面的属性数据是引用类型，
也就是属性的类型也是对象，则需要一直递归的克隆下去。这也意味着，要想深度克隆成功，必须要整个克隆
所涉及的对象都要正确实现克隆方法，如果其中有一个没有正确实现克隆。那么就会导致克隆失败。

原型管理器：
如果一个系统中原型的数目不固定，比如系统中的原型可以被动态的创建和销毁，那么就需要在系统中维护一个
当前可用的原型的注册表，这个注册表就被称为原型管理器。
有了原型管理器之后，一般情况下，除了向原型管理器里面添加原型对象的时候是通过new来创造的对象，其余时候
都是通过向原型管理器来请求原型实例，然后通过克隆的方法来获取新的实例，这就可以实现动态管理，或者
动态切换具体的实现对象实例。

原型模式的本质：克隆生成对象