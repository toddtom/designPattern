备忘录模式：
在不破坏封装性的前提下，捕获一个对象的内部状态，并在该对象之外保存这个状态，
这样以后就可将该对象恢复到原先保存的状态。

备忘录对象：
备忘录对象通常是用来记录原发器需要保存的状态的对象，简单点的实现，也就是封装数据的对象。
备忘录对象一般只让原发器对象来操作，而不是像普通的封装对象那样，谁都可以使用。
通常会把备忘录对象作为原发器对象的内部类来实现，而且实现城私有的，这就断绝了外部来访问
这个备忘录对象的途径。为了与外部交互，通常备忘录对象都会实现一个窄接口，来标识对象的类型。

原发器对象：
原发器对象就是需要被保存状态的对象，也是有可能需要恢复状态的对象。原发器一般会包含
备忘录对象的实现。
通常原发器对象应该提供捕获某个时刻对象内部状态的方法。在这个方法中，原发器对象会创建备忘录
对象，把需要保存的状态数据设置到备忘录对象中，然后把备忘录对象提供给管理者对象来保存。
原发器对象也应该提供按照外部要求来恢复内部状态到某个备忘录对象记录的状态。

管理者对象：
管理者对象主要负责保存备忘录对象。管理者对象需要实现存入备忘录对象，保存备忘录对象和获取备忘录
对象。

窄接口和宽接口：
窄接口：管理者只能看到备忘录的窄接口，窄接口的实现中通常没有任何的方法，只是一个类型标识，
窄接口使得管理者只能将备忘录传递给其他对象。
宽接口：原发器能够看到一个宽接口，允许它访问所需的所有数据，来返回到先前的状态。

备忘录模式的本质：保存和恢复内部状态。